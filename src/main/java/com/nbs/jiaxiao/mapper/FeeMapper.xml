<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nbs.jiaxiao.mapper.FeeMapper">
	<resultMap id="feeResultMap" type="com.nbs.jiaxiao.domain.po.Fee">
  		<result property="id" column="ID"/>
  		<result property="userId" column="USER_ID"/>
  		<result property="type" column="TYPE"/>
  		<result property="money" column="MONEY"/>
  		<result property="payDate" column="PAY_DATE"/>
  		<result property="payType" column="PAY_TYPE"/>
  		<result property="remark" column="REMARK"/>
  		<result property="createdTime" column="CREATED_TIME"/>
  		<result property="modifiedTime" column="MODIFIED_TIME"/>
  		<result property="lastUpdateNo" column="LAST_UPDATE_NO"/>
  		<result property="lastUpdateNoUserId" column="LAST_UPDATE_NO_USER_ID"/>
	</resultMap>

	<sql id="commonSelect">
		ID, USER_ID, TYPE, MONEY, PAY_DATE, PAY_TYPE, REMARK, CREATED_TIME, MODIFIED_TIME, LAST_UPDATE_NO, LAST_UPDATE_NO_USER_ID
	</sql>
	
	<sql id="whereCondition">
		WHERE DELETED = 0 
	 			<if test="id != null"> AND ID = #{id}</if> 
	 			<if test="userId != null"> AND USER_ID = #{userId}</if> 
	 			<if test="type != null"> AND TYPE = #{type}</if> 
	 			<if test="money != null"> AND MONEY = #{money}</if> 
	 			<if test="payDate != null"> AND PAY_DATE = #{payDate}</if> 
	 			<if test="payType != null"> AND PAY_TYPE = #{payType}</if> 
	 			<if test="remark != null"> AND REMARK = #{remark}</if> 
	 			<if test="param.createdTimeStart != null"> AND CREATED_TIME <![CDATA[>=]]> #{param.createdTimeStart} </if> 
	 			<if test="param.createdTimeEnd != null"> AND CREATED_TIME <![CDATA[<=]]> #{param.createdTimeEnd} </if>
	 			<if test="param.modifiedTimeStart != null"> AND MODIFIED_TIME <![CDATA[>=]]> #{param.modifiedTimeStart} </if> 
	 			<if test="param.modifiedTimeEnd != null"> AND MODIFIED_TIME <![CDATA[<=]]> #{param.modifiedTimeEnd} </if>
				<if test="lastUpdateNo != null"> AND LAST_UPDATE_NO = #{lastUpdateNo}</if> 
	 			<if test="param.lastUpdateNoStart != null"> AND LAST_UPDATE_NO <![CDATA[>=]]> #{param.lastUpdateNoStart} </if> 
	 			<if test="param.lastUpdateNoEnd != null"> AND LAST_UPDATE_NO <![CDATA[<=]]> #{param.lastUpdateNoEnd} </if>
	 			<if test="lastUpdateNoUserId != null"> AND LAST_UPDATE_NO_USER_ID = #{lastUpdateNoUserId}</if> 
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
	 	INSERT  INTO  fee 
	 	<trim prefix="(" suffixOverrides="," suffix=")">
				<if test="id != null">ID,</if> 
				<if test="userId != null">USER_ID,</if> 
				<if test="type != null">TYPE,</if> 
				<if test="money != null">MONEY,</if> 
				<if test="payDate != null">PAY_DATE,</if> 
				<if test="payType != null">PAY_TYPE,</if> 
				<if test="remark != null">REMARK,</if> 
				<if test="createdTime != null">CREATED_TIME,</if> 
				<if test="modifiedTime != null">MODIFIED_TIME,</if> 
				<if test="lastUpdateNo != null">LAST_UPDATE_NO,</if> 
				<if test="lastUpdateNoUserId != null">LAST_UPDATE_NO_USER_ID,</if> 
	 	</trim>
		VALUES
		<trim prefix="(" suffixOverrides="," suffix=")">
			<if test="id != null">#{id},</if> 
			<if test="userId != null">#{userId},</if> 
			<if test="type != null">#{type},</if> 
			<if test="money != null">#{money},</if> 
			<if test="payDate != null">#{payDate},</if> 
			<if test="payType != null">#{payType},</if> 
			<if test="remark != null">#{remark},</if> 
			<if test="createdTime != null">#{createdTime},</if> 
			<if test="modifiedTime != null">#{modifiedTime},</if> 
			<if test="lastUpdateNo != null">#{lastUpdateNo},</if> 
			<if test="lastUpdateNoUserId != null">#{lastUpdateNoUserId},</if> 
		</trim>
	</insert>
	
	<update id="updateByPriKey">
		UPDATE   fee 
		<set>
				<if test="userId != null">USER_ID=#{userId},</if>
				<if test="type != null">TYPE=#{type},</if>
				<if test="money != null">MONEY=#{money},</if>
				<if test="payDate != null">PAY_DATE=#{payDate},</if>
				<if test="payType != null">PAY_TYPE=#{payType},</if>
				<if test="remark != null">REMARK=#{remark},</if>
				<if test="createdTime != null">CREATED_TIME=#{createdTime},</if>
				<if test="modifiedTime != null">MODIFIED_TIME=#{modifiedTime},</if>
				LAST_UPDATE_NO = LAST_UPDATE_NO + 1,
				<if test="lastUpdateNoUserId != null">LAST_UPDATE_NO_USER_ID=#{lastUpdateNoUserId},</if>
    	</set>
    	WHERE ID = #{id}  <if test="lastUpdateNo != null"> AND LAST_UPDATE_NO = #{lastUpdateNo} </if>  AND DELETED = 0 
    </update>
	
	<update id="delete">
		UPDATE  fee SET DELETED = ID , LAST_UPDATE_NO = LAST_UPDATE_NO + 1  <include refid="whereCondition"/>
	</update>
	
	<update id="deleteByPriKey">
		UPDATE  fee SET DELETED = ID , LAST_UPDATE_NO = LAST_UPDATE_NO + 1  WHERE ID = #{id}  AND DELETED = 0 
	</update>
	
	<delete id="deleteActual">
		DELETE FROM fee <include refid="whereCondition"/>
	</delete>
	
	<delete id="deleteActualByPriKey">
		DELETE FROM fee WHERE ID = #{id}
	</delete>
	
	<delete id="clean">
		DELETE FROM fee WHERE ID > #{id} and DELETED != 0 
	</delete>
	
	<select id="selectByPriKey" resultMap="feeResultMap">
		   SELECT   
		   <include refid="commonSelect" />
		   FROM   fee WHERE ID = #{id}
	</select>
	
	<select id="selectList" resultMap="feeResultMap">
		   SELECT   
		   <include refid="commonSelect"/>
		   FROM   fee
		   <include refid="whereCondition"/> 
		   <if test="param.columnSort != null">ORDER BY ${param.columnSort} </if>  
		   <if test="param.columnSort == null">ORDER BY ID </if>   
		   <if test="param.limit != null">limit ${param.offset}, ${param.limit} </if>   
	</select>
	
	<select id="selectCount" resultType="long">
	 	SELECT  COUNT(1) CNT FROM   fee
		<include refid="whereCondition"/> 
	</select>
	
	<select id="exist" resultType="int">
	 	SELECT  ID FROM   fee
		<include refid="whereCondition"/> limit 1
	</select>
	
	<!-- customized code start -->
	
	<!-- customized code end -->
</mapper>
